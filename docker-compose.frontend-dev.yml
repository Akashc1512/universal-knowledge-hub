version: '3.8'

services:
  # Backend API Service (Development)
  backend:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: ukp-backend-dev
    environment:
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/ukp_dev
      - REDIS_URL=redis://redis:6379
      - ELASTICSEARCH_URL=http://elasticsearch:9200
      - CORS_ORIGINS=http://localhost:3000,http://localhost:3001
      - ADMIN_API_KEY=admin-key-123
      - USER_API_KEY=user-key-456
      - READONLY_API_KEY=readonly-key-789
      - ENVIRONMENT=development
    ports:
      - "8002:8002"
    volumes:
      - ./api:/app/api
      - ./agents:/app/agents
      - ./.env:/app/.env
    depends_on:
      - redis
      - postgres
    restart: unless-stopped
    command: ["uvicorn", "api.main:app", "--host", "0.0.0.0", "--port", "8002", "--reload"]

  # Redis (minimal for dev)
  redis:
    image: redis:7-alpine
    container_name: ukp-redis-dev
    ports:
      - "6379:6379"
    restart: unless-stopped

  # PostgreSQL (minimal for dev)
  postgres:
    image: postgres:15-alpine
    container_name: ukp-postgres-dev
    environment:
      POSTGRES_DB: ukp_dev
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
    restart: unless-stopped

volumes:
  postgres_dev_data:

# Note: Run frontend separately with npm run dev for hot reload
# cd frontend && npm run dev 