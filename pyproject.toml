[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "universal-knowledge-hub"
version = "0.1.0"
description = "Universal Knowledge Platform with AI-powered search and synthesis"
authors = [{name = "Universal Knowledge Hub Team"}]
readme = "README.md"
requires-python = ">=3.13.5"
dependencies = [
    "fastapi>=0.116.1",
    "uvicorn>=0.35.0",
    "pydantic>=2.11.7",
    "openai>=1.0.0",
    "anthropic>=0.7.0",
    "pinecone>=2.0.0",
    "elasticsearch>=8.15.0",
    "redis>=5.0.1",
    "requests>=2.32.4",
    "python-dotenv>=1.1.1",
    "tenacity>=9.1.2",
    "numpy>=2.0.2",
    "aiohttp>=3.12.14",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.4.1",
    "pytest-cov>=5.0.0",
    "pytest-asyncio>=1.1.0",
    "black>=25.1.1",
    "flake8>=7.2.1",
    "bandit>=1.8.1",
    "mypy>=1.12.0",
    "pre-commit>=3.0.0",
]

[tool.black]
line-length = 88
target-version = ['py313']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--disable-warnings",
    "--tb=short",
    "--strict-markers",
    "--strict-config"
]
markers = [
    "asyncio: mark test as async",
    "slow: marks tests as slow",
    "integration: marks tests as integration tests"
]
filterwarnings = [
    "ignore::DeprecationWarning:fastapi.*",
    "ignore::RuntimeWarning:agents.*",
    "ignore::ResourceWarning"
]

[tool.coverage.run]
source = ["agents", "core", "architecture", "api"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/.venv/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.mypy]
python_version = "3.13"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "elasticsearch.*",
    "pinecone.*",
    "anthropic.*",
    "openai.*",
]
ignore_missing_imports = true

[tool.bandit]
exclude_dirs = ["tests", "venv", ".venv"]
skips = ["B101", "B601"] 