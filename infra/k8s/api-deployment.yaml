apiVersion: apps/v1
kind: Deployment
metadata:
  name: universal-knowledge-hub-api
  namespace: universal-knowledge-hub
  labels:
    app: universal-knowledge-hub-api
    version: v1
spec:
  replicas: 3
  selector:
    matchLabels:
      app: universal-knowledge-hub-api
  template:
    metadata:
      labels:
        app: universal-knowledge-hub-api
        version: v1
    spec:
      containers:
      - name: api
        image: universal-knowledge-hub:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8002
          name: http
        env:
        - name: UKP_HOST
          value: "0.0.0.0"
        - name: UKP_PORT
          value: "8002"
        - name: OPENAI_API_KEY
          valueFrom:
            secretKeyRef:
              name: api-secrets
              key: openai-api-key
        - name: ANTHROPIC_API_KEY
          valueFrom:
            secretKeyRef:
              name: api-secrets
              key: anthropic-api-key
        - name: PINECONE_API_KEY
          valueFrom:
            secretKeyRef:
              name: api-secrets
              key: pinecone-api-key
        - name: ELASTICSEARCH_URL
          valueFrom:
            secretKeyRef:
              name: api-secrets
              key: elasticsearch-url
        - name: ELASTICSEARCH_API_KEY
          valueFrom:
            secretKeyRef:
              name: api-secrets
              key: elasticsearch-api-key
        - name: REDIS_URL
          value: "redis://universal-knowledge-hub-redis:6379"
        - name: POSTGRES_URL
          value: "postgresql://ukp_admin:$(POSTGRES_PASSWORD)@universal-knowledge-hub-rds:5432/ukp_db"
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: api-secrets
              key: postgres-password
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8002
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8002
          initialDelaySeconds: 5
          periodSeconds: 5
        volumeMounts:
        - name: logs
          mountPath: /app/logs
      volumes:
      - name: logs
        emptyDir: {}
      imagePullSecrets:
      - name: docker-registry-secret
---
apiVersion: v1
kind: Service
metadata:
  name: universal-knowledge-hub-api
  namespace: universal-knowledge-hub
  labels:
    app: universal-knowledge-hub-api
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 8002
    protocol: TCP
    name: http
  selector:
    app: universal-knowledge-hub-api
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: universal-knowledge-hub-api-ingress
  namespace: universal-knowledge-hub
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  tls:
  - hosts:
    - api.universal-knowledge-hub.com
    secretName: universal-knowledge-hub-tls
  rules:
  - host: api.universal-knowledge-hub.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: universal-knowledge-hub-api
            port:
              number: 80 